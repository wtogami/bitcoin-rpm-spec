#!/bin/sh
#
# bitcoin Peer-to-peer digital currency
#
# chkconfig:   2345 79 21
# description: Bitcoin is an experimental new digital currency that enables    \
#              instant payments to anyone, anywhere in the world. Bitcoin      \
#              uses peer-to-peer technology to operate with no central         \
#              authority: managing transactions and issuing money are          \
#              carried out collectively by the network.

### BEGIN INIT INFO
# Provides: bitcoin
# Required-Start: $local_fs $network $remote_fs $time
# Required-Stop: $local_fs $network $remote_fs $time
# Should-Start: 
# Should-Stop: 
# Default-Start: 
# Default-Stop: 
# Short-Description: Peer-to-peer digital currency
# Description: Bitcoin is an experimental new digital currency that enables
#              instant payments to anyone, anywhere in the world. Bitcoin
#              uses peer-to-peer technology to operate with no central
#              authority: managing transactions and issuing money are
#              carried out collectively by the network.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

exec="/usr/sbin/bitcoind"
prog="bitcoin"
config="/etc/bitcoin/bitcoin.conf"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

start() {
	[ -x $exec ] || exit 5
	echo -n $"Starting $prog: "
	daemon --user bitcoin $exec -daemon -conf=$CONFIG_FILE -datadir=$DATA_DIR -pid=$PID_FILE $OPTIONS &>/dev/null
	retval=$?
	echo
	[ $retval -eq 0 ] && touch $lockfile
	return $retval
}

stop() {
	echo -n $"Stopping $prog: "
	killproc ${prog}d
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

restart() {
	stop
	start
}

reload() {
	restart
}

force_reload() {
	restart
}

rh_status() {
	status ${prog}d
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}


case "$1" in
	start)
		rh_status_q && exit 0
		$1
		;;
	stop)
		rh_status_q || exit 0
		$1
		;;
	restart)
		$1
		;;
	reload)
		rh_status_q || exit 7
		$1
		;;
	force-reload)
		force_reload
		;;
	status)
		rh_status
		;;
	condrestart|try-restart)
		rh_status_q || exit 0
		restart
		;;
	*)
		echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
		exit 2
esac
exit $?
